start.date = as.POSIXct("2004-01-01 00:00", tz = "GMT")
start.date
end.date = as.POSIXct("2004-12-31 23:00", tz = "GMT")
end.date = as.POSIXct("2004-12-31 23:00", tz = "GMT")
end.date
start.date = as.POSIXct("2004-01-01 00:00", tz = "GMT")
start.date
df
format(1:10)
format(1:10, trim = TRUE)
format(1:10, trim = False)
format(1:10, trim = FALSE)
format(13.7)
format(13.7, nsmall = 3)
format(2^31-1, scientific = TRUE)
format(2^31-1)
format(start.date, "%Y-%m-%d%H-%M-%S")
format(start.date, "%Y-%m-%d %H-%M-%S")
format(start.date, "%Y-%m-%d %H-%M*%S")
format(start.date, "%Y-%П-%d %H-%M*%S")
strptime(start.date, "%Y-%m-%d %H-%M-%S")
strptime(Sys.time(), "%Y-%m-%d %H-%M-%S")
strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
as.POSIXlt("2004-12-31 23:00", tz = "GMT")
as.POSIXct("2004-12-31 23:00", tz = "GMT")
difftime(end.date,start.date, units = 'mins')
date()
baba =as.POSIXlt("2004-01-01 00:00", tz = "GMT")
baba$year
baba$hour
baba =as.POSIXlt("2004-01-01 12:00", tz = "GMT")
baba$hour
baba$hour = baba$hour + 1
baba
data = read.csv("http://www.bas.bg//statlab//tchorbadjieff//Shares_price_ts.cvs")
data = read.csv("http://www.bas.bg//statlab//tchorbadjieff//Shares_price_ts.cvs")
data = read.csv("http://www.bas.bg//statlab//tchorbadjieff//Shares_price.cvs")
data = read.csv("http://www.math.bas.bg//statlab//tchorbadjieff//Shares_price_ts.cvs")
data
data = read.csv("http://www.math.bas.bg//statlab//tchorbadjieff//Shares_price_ts.cvs")
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price.csv")
data
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
plot(data$TimeStamp~data$Price)
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
data$Timestamp
data$Timestamp~data$Price
plot(data$Timestamp~data$Price)
data$Price[data$Timestamp >= startdate $ data$Timestamp <= enddate]
data$Price[which(data$Timestamp >= startdate $ data$Timestamp <= enddate)]
data$Price[which(data$Timestamp >= startdate $ data$Timestamp => enddate)]
data$Price[which(data$Timestamp >= startdate $ data$Timestamp = enddate)]
data[data$Timestamp > start.date]
data[which(data$Timestamp > start.date),]
data
data$Timestamp
data[which(data$Timestamp > start.date),]
data[which(data$Timestamp >= start.date),]
data[which(data$Timestamp >= startdate),]
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
startdate = as.POSIXlct("2012-01-12 12:00", tz = "GMT")
enddate = as.POSIXct("2012-01-12 14:00", tz = "GMT")
data[which(data$Timestamp >= startdate),]
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
startdate = as.POSIXct("2012-01-12 12:00", tz = "GMT")
enddate = as.POSIXct("2012-01-12 14:00", tz = "GMT")
data[which(data$Timestamp >= startdate),]
data$Timestamp
data$Timestamp[1]
data$Timestamp[1][1]
data$Timestamp
data$Timestamp[[2]]
data[data$Timestamp >= startdate & data$Timestamp <= enddate,]
data$Timestamp = as.POSIXct(data$Timestamp)
data[data$Timestamp >= startdate & data$Timestamp <= enddate,]
data[which(data$Timestamp >= startdate & data$Timestamp <= enddate),]
data[which(data$Timestamp <= enddate),]
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
startdate = as.POSIXct("2012-01-12 12:00", tz = "GMT")
enddate = as.POSIXct("2012-01-12 14:00", tz = "GMT")
data$Timestamp = as.POSIXct(data$Timestamp)
data[which(data$Timestamp <= enddate),]
data[which(enddate >= data$Timestamp),]
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
startdate = as.POSIXct("2012-01-12 12:00", tz = "GMT")
enddate = as.POSIXct("2012-01-12 14:00", tz = "GMT")
data$Timestamp = as.POSIXct(data$Timestamp)
data[which(enddate >= data$Timestamp),]
data[which(startdate <= data$Timestamp),]
startdate
data[which(startdate >= data$Timestamp),]
data$Timestamp = as.POSIXct(data$Timestamp, tz = "GMT")
data[which(startdate >= data$Timestamp),]
data[which(startdate <= data$Timestamp),]
twelve = "2012-01-12 12:00:00"
fourteen = "2012-01-12 14:00:00"
data$Timestamp = as.POSIXct(data$Timestamp)
data$Price[data$Timestamp >= as.POSIXct(twelve) & data$Timestamp < as.POSIXct(fourteen)]
data[data$Timestamp >= as.POSIXct(twelve) & data$Timestamp < as.POSIXct(fourteen),]
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
startdate = as.POSIXct("2012-01-12 12:00")
enddate = as.POSIXct("2012-01-12 14:00")
data$Timestamp = as.POSIXct(data$Timestamp)
data[which(startdate <= data$Timestamp),]
data[which(startdate <= data$Timestamp $ data$Timestamp <= enddate),]
data[which(startdate <= data$Timestamp $ data$Timestamp >= enddate),]
data[which(startdate <= data$Timestamp $ data$Timestamp > enddate),]
data[which(startdate <= data$Timestamp),]
data[which(enddate >= data$Timestamp),]
data[enddate >= data$Timestamp,]
data[enddate >= data$Timestamp & data$Timestamp >= startdate,]
data$Price[enddate >= data$Timestamp & data$Timestamp >= startdate,]
data$Price[enddate >= data$Timestamp & data$Timestamp >= startdate]
plot(as.POSIXct(data$Timestamp), data$Price, type='l')
plot(as.POSIXct(data$Timestamp), data$Price)
plot(as.POSIXct(data$Timestamp), data$Price, type = "b")
plot(as.POSIXct(data$Timestamp), data$Price, type = "s")
plot(as.POSIXct(data$Timestamp), data$Price, type = "b")
plot(as.POSIXct(data$Timestamp)~data$Price)
plot(as.POSIXct(data$Timestamp), data$Price, type = "b")
plot(as.POSIXct(data$Timestamp)~data$Price, type = "b")
plot(as.POSIXct(data$Timestamp),data$Price, type = "b")
plot(as.POSIXct(data$Timestamp)~data$Price, type = "b")
plot(as.POSIXct(data$Timestamp), data$Price, type = "b")
plot(as.POSIXct(data$Timestamp), data$Price, data$Volume)
plot(as.POSIXct(data$Timestamp), data$Price)
plot(as.POSIXct(data$Timestamp), data$Price * data$Volume)
plot(as.POSIXct(data$Timestamp), data$Price * data$Volume, type = "b")
if(2>3) a = 2  else  a = 3
a
for(i in 1:5) print(1:i)
for(i in 1:10) print(1:i)
a = 1
while (a < 5) a = a+1
a
a = 1
while (a < 5) a = a + 1
a
sum = 0
i = 1
while(i < 5){
sum = sum + i
i = i + 1
}
sum
sum = 0
i = 1
while(i < 5){
sum = sum + i
i = i + 1
}
sum
sum = 0
i = 1
while(i <= 5){
sum = sum + i
i = i + 1
}
sum
x = 5
foo = function(a){
x = 4
return(a+x)
}
foo(2)
x
x = 5
foo = function(a){
x = 4
}
foo(2)
x
x = 5
foo = function(a){
x = 4
return(0)
}
foo(2)
x
data = read.csv("http://www.math.bas.bg/statlab/tchorbadjieff/Shares_price_ts.csv")
data
data[,2]
data[,3]
tapply(data[,2], INDEX = data[,3], FUN = mean)
tapply(data[,2], INDEX = data[,3], FUN = var)
A = c(0, 1.5, 2)
C = c(2, 1, 0.5)
B = c(2, 0, 1.5)
c(A,B,C)
M = matrix(c(A,B,C),3,3, byrow = TRUE)
M
rep(2,5)
r = apply(M, 1, function(x,m) (sum(x)*m)/rep(m,3), m = 2.5)
r
r = apply(M, 1, function(x,m) (sum(x)*m)/rep(m,3), m = 2.5)
r
r = apply(M, 1, function(x,m) (sum(x)*m)/m, m = 2.5)
r
r = apply(M, 1, function(x,m) (sum(x)*m)/(sum(m)), m = 2.5)
r
sum(m)
r = apply(M, 1, function(x,m) (sum(x)*m)/(sum(m)), m = 2.5)
r
r = apply(M, 1, function(x,m) (sum(x)*m), m = 2.5)
r
r = apply(M, 1, function(x,m) (sum(x)*m)/(sum(m)*1), m = 2.5)
r
r = apply(M, 1, function(x,m) (sum(x)*m)/sum(rep(m,3)), m = 2.5)
r
A = c(1/8, 1/8, 0, 0)
B = c(0, 2/8, 2/8, 0)
C = c(0, 0, 1/8, 1/8)
M = matrix(c(A,B,C),3,4, byrow = TRUE)
M = matrix(c(A,B,C),3,4, byrow = TRUE)
M
x1 = c(0:3)
x1
x2 = c(0:2)
m1 = apply(M, 1, sum)
m1
sum(m1) == 1
m2 = apply(M, 2, sum)
m2
sum(m2) == 1
EX1 = x1*m1
x1
m1
A = c(1/8, 1/8, 0, 0)
B = c(0, 2/8, 2/8, 0)
C = c(0, 0, 1/8, 1/8)
M = matrix(c(A,B,C),3,4, byrow = TRUE)
# проверка за вероятностите
m1 = apply(M, 2, sum)
sum(m1) == 1
m2 = apply(M, 1, sum)
sum(m2) == 1
# математическо очакване EX
EX1 = x1*m1
EX1
A = c(1/8, 1/8, 0, 0)
B = c(0, 2/8, 2/8, 0)
C = c(0, 0, 1/8, 1/8)
M = matrix(c(A,B,C),3,4, byrow = TRUE)
# проверка за вероятностите
m1 = apply(M, 1, sum)
sum(m1) == 1
m2 = apply(M, 2, sum)
sum(m2) == 1
# математическо очакване EX
EX2 = x1*m2
EX2
EX1 = x2*m1
EX1
m1
x1 = c(0:2)
x2 = c(0:3)
# разпределение
A = c(1/8, 1/8, 0, 0)
B = c(0, 2/8, 2/8, 0)
C = c(0, 0, 1/8, 1/8)
M = matrix(c(A,B,C),3,4, byrow = TRUE)
# проверка за вероятностите
m1 = apply(M, 1, sum)
sum(m1) == 1
m2 = apply(M, 2, sum)
sum(m2) == 1
# математическо очакване EX
EX1 = x1*m1
EX2 = x2*m2
x1^2
EX1^2
EX1
DX1 = (x1^2)*m1 - EX1^2
DX1
DX2 = (x2^2)*m2 - EX2^2
DX2
EX2
library("MASS")
mtcars
x = mtcars$cyl
x
answer = aggregate(mtcars, by = list(cyl, gear), FUN = mean)
answer = aggregate(mtcars, by = list(mtcars$cyl, mtcars$gear), FUN = mean)
answer
